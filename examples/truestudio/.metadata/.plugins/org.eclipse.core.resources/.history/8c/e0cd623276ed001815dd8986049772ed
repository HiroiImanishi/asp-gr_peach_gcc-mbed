#
#		Makefile のターゲット依存部（GR-PEACH用）
#
#  $Id: Makefile.target 914 2018-03-07 10:16:16Z ertl-hiro $
# 

#
#  システム名，チップ名，コア名，開発環境名の定義
#
SYS = gr_peach
CHIP = rza1
CORE = arm
TOOL = gcc

#
#  実行形態
#
#  フラッシュメモリ（ROM）に書き込むか，RAMにロードして実行するかを選択
#  する．
#
EXECUTE_ON = ROM
#EXECUTE_ON = RAM

#
#  ブートローダの組込み
#
ifeq ($(EXECUTE_ON),ROM)
	SYSSVC_COBJS := $(SYSSVC_COBJS) sf_boot.o
endif

#
#  MPCoreの種類の定義
#
MPCORE_TYPE = CA9

#
#  コンパイルオプション
#
INCLUDES := $(INCLUDES) -I$(TARGETDIR)
COPTS := $(COPTS) -mlittle-endian
LDFLAGS := $(LDFLAGS) -mlittle-endian
CFG1_OUT_LDFLAGS := -nostdlib $(CFG1_OUT_LDFLAGS)
CDEFS := $(CDEFS) -DTOPPERS_RZA1H
#
#  カーネルに関する定義
#
KERNEL_DIRS := $(KERNEL_DIRS) $(TARGETDIR)
KERNEL_COBJS := $(KERNEL_COBJS) target_kernel_impl.o pl310.o
KERNEL_ASMOBJS := $(KERNEL_ASMOBJS) target_support.o

#
#  コンパイルオプションとリンカスクリプトの定義
#
ifeq ($(EXECUTE_ON),ROM)
	CDEFS := $(CDEFS) -DTOPPERS_EXECUTE_ON_ROM
#	LDSCRIPT = $(TARGETDIR)/gr_peach_rom.ld
else
	CDEFS := $(CDEFS) -DTOPPERS_EXECUTE_ON_RAM
#	LDSCRIPT = $(TARGETDIR)/gr_peach_ram.ld
endif

#
#  トレースログ記録のサンプルコードに関する定義
#
ifdef ENABLE_TRACE
	COPTS := $(COPTS) -DTOPPERS_ENABLE_TRACE
	SYSSVC_DIRS := $(SYSSVC_DIRS) $(SRCDIR)/arch/tracelog
endif

#
#  GNU開発環境のターゲットアーキテクチャの定義
#
ifneq ($(USE_TRUESTUDIO),true)
GCC_TARGET = arm-none-eabi
else
# use GCC bundled in TrueSTUDIO
GCC_TARGET = arm-atollic-eabi
endif


#
#  チップ依存部
#
include $(SRCDIR)/arch/arm_gcc/rza1/Makefile.chip


#
#  フラッシュへの書き込み
#
OPENOCD_DIR  = /home/imanishi/Documents/openocd/0.10.0-201601101000-dev
OPENOCD_PATH = ${OPENOCD_DIR}/bin/openocd
OPENOCD_SCRIPT_PATH = ${OPENOCD_DIR}/scripts
OPENOCD_SCRIPT1  = ${OPENOCD_DIR}/scripts/interface/cmsis-dap.cfg
OPENOCD_SCRIPT2  = ${OPENOCD_DIR}/scripts/target/renesas_rza1h_swd.cfg 
GDB = arm-atollic-eabi-gdb

ifeq ($(EXECUTE_ON),RAM)
	GDBINI = gdb_ram.ini
else
	GDBINI = gdb_rom.ini
endif

ocd: $(OBJNAME).bin
#	cygstart `cygpath -u "$(OPENOCD_PATH)"` '-s "$(OPENOCD_SCRIPT_PATH)"' '-f "$(OPENOCD_SCRIPT1)"' '-f "$(OPENOCD_SCRIPT2)"'
	osascript -e 'tell app "Terminal" do script "$(OPENOCD_PATH)" -s "$(OPENOCD_SCRIPT_PATH)" -f "$(OPENOCD_SCRIPT1)" -f "$(OPENOCD_SCRIPT2)" end tell'

db: $(OBJNAME).bin
	$(GDB) $(OBJFILE) -x $(TARGETDIR)/${GDBINI}

